name: Playwright Tests
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5

    # Python с автоматическим кешированием pip зависимостей
    - name: Set up Python
      uses: actions/setup-python@v6
      with:
        python-version: '3.13'
        cache: 'pip'
        cache-dependency-path: 'requirements.txt'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # Получаем версию Playwright правильным способом
    - name: Get Playwright version
      id: playwright-version
      run: |
        PLAYWRIGHT_VERSION=$(pip show playwright | grep Version | cut -d' ' -f2)
        echo "PLAYWRIGHT_VERSION=$PLAYWRIGHT_VERSION" >> $GITHUB_ENV

    - name: Cache Playwright browsers
      uses: actions/cache@v4
      id: playwright-cache
      with:
        path: ~/.cache/ms-playwright
        key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}
        restore-keys: |
          ${{ runner.os }}-playwright-

    # Установка браузеров только при cache miss
    - name: Install Playwright browsers
      if: steps.playwright-cache.outputs.cache-hit != 'true'
      run: python -m playwright install --with-deps

    # Установка только OS зависимостей при cache hit
    - name: Install Playwright OS dependencies
      if: steps.playwright-cache.outputs.cache-hit == 'true'
      run: python -m playwright install-deps

    - name: Run your tests
      run: pytest --alluredir=allure-results --tracing=retain-on-failure
      continue-on-error: true

    - uses: actions/upload-artifact@v4
      if: ${{ !cancelled() }}
      with:
        name: playwright-traces
        path: test-results/

    - name: Upload Allure results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: allure-results
        path: allure-results/
        retention-days: 30

  generate-report:
    runs-on: ubuntu-latest
    needs: test
    if: always()
    steps:
    - name: Download Allure results
      uses: actions/download-artifact@v4
      with:
        name: allure-results
        path: allure-results

    - name: Get Allure history
      uses: actions/checkout@v5
      if: always()
      continue-on-error: true
      with:
        ref: gh-pages
        path: gh-pages

    - name: Generate Allure Report
      uses: simple-elf/allure-report-action@master
      if: always()
      id: allure-report
      with:
        allure_results: allure-results
        gh_pages: gh-pages
        allure_report: allure-report
        allure_history: allure-history
        keep_reports: 20

    - name: Deploy report to Github Pages
      if: always()
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_branch: gh-pages
        publish_dir: allure-history
