{"uid":"385cca64fd16e88c","name":"Проверка авторизации с несуществующей почтой","fullName":"tests.test_login.TestAuth#test_invite_for_reg","historyId":"49eeb53e034942e284e694350d27823c","time":{"start":1760379628945,"stop":1760379658947,"duration":30002},"description":"Тест проверяет, что если нет почты в базе, она предложит пройти регистрацию","descriptionHtml":"<p>Тест проверяет, что если нет почты в базе, она предложит пройти регистрацию</p>\n","status":"failed","statusMessage":"AssertionError: Не удалось загрузить страницу: Page.goto: Timeout 30000ms exceeded.\n  Call log:\n    - navigating to \"https://qa.astanahub.com/ru/s/auth/login/\", waiting until \"load\"\n  \nassert False","statusTrace":"self = <test_login.TestAuth object at 0x7fa0ab365a70>\npage = <Page url='about:blank'>\nauth_page = <pages.auth_page.AuthPage object at 0x7fa0a9f7b9d0>\nemail = 'wrong@example974.com', password = 'wrongpass', expected_status = 200\n\n    @allure.title(\"Проверка авторизации с несуществующей почтой\")\n    @allure.description(\"Тест проверяет, что если нет почты в базе, она предложит пройти регистрацию\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @pytest.mark.parametrize(\n        \"email, password, expected_status\",\n        [\n            (\"123alisher123@alisher.alisher\", \"Adfsaf4213!\", 200),\n            (f\"wrong@example{random.randint(1, 1000)}.com\", \"wrongpass\", 200),\n    \n        ],\n        ids=[\"✅ Невалидный логин\", \"✅ Невалидный логин 2\"]\n    )\n    def test_invite_for_reg(self, page, auth_page, email, password, expected_status):\n        with allure.step(\"Переход на страницу авторизации\"):\n            try:\n>               response = page.goto(Links.LOGIN_PAGE)\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntests/test_login.py:68: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/playwright/sync_api/_generated.py:9019: in goto\n    self._sync(\n/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/playwright/_impl/_page.py:556: in goto\n    return await self._main_frame.goto(**locals_to_params(locals()))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/playwright/_impl/_frame.py:153: in goto\n    await self._channel.send(\n/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/playwright/_impl/_connection.py:69: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <playwright._impl._connection.Connection object at 0x7fa0a9f79590>\ncb = <function Channel.send.<locals>.<lambda> at 0x7fa0a9ee0c20>\nis_internal = False, title = None\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(\n            task, \"__pw_stack__\", None\n        ) or inspect.stack(0)\n    \n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.TimeoutError: Page.goto: Timeout 30000ms exceeded.\nE           Call log:\nE             - navigating to \"https://qa.astanahub.com/ru/s/auth/login/\", waiting until \"load\"\n\n/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/playwright/_impl/_connection.py:558: TimeoutError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_login.TestAuth object at 0x7fa0ab365a70>\npage = <Page url='about:blank'>\nauth_page = <pages.auth_page.AuthPage object at 0x7fa0a9f7b9d0>\nemail = 'wrong@example974.com', password = 'wrongpass', expected_status = 200\n\n    @allure.title(\"Проверка авторизации с несуществующей почтой\")\n    @allure.description(\"Тест проверяет, что если нет почты в базе, она предложит пройти регистрацию\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @pytest.mark.parametrize(\n        \"email, password, expected_status\",\n        [\n            (\"123alisher123@alisher.alisher\", \"Adfsaf4213!\", 200),\n            (f\"wrong@example{random.randint(1, 1000)}.com\", \"wrongpass\", 200),\n    \n        ],\n        ids=[\"✅ Невалидный логин\", \"✅ Невалидный логин 2\"]\n    )\n    def test_invite_for_reg(self, page, auth_page, email, password, expected_status):\n        with allure.step(\"Переход на страницу авторизации\"):\n            try:\n                response = page.goto(Links.LOGIN_PAGE)\n                assert response.status == 200, f\"Ошибка, url не действительный: {response.status}\"\n            except PlaywrightTimeoutError as e:\n>               assert False, f\"Не удалось загрузить страницу: {e}\"\nE               AssertionError: Не удалось загрузить страницу: Page.goto: Timeout 30000ms exceeded.\nE                 Call log:\nE                   - navigating to \"https://qa.astanahub.com/ru/s/auth/login/\", waiting until \"load\"\nE                 \nE               assert False\n\ntests/test_login.py:71: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1760379567379,"stop":1760379567379,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"pytestconfig","time":{"start":1760379567379,"stop":1760379567379,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_verify_url","time":{"start":1760379567379,"stop":1760379567379,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"delete_output_dir","time":{"start":1760379567379,"stop":1760379567379,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"page","time":{"start":1760379628559,"stop":1760379628943,"duration":384},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth_page","time":{"start":1760379628944,"stop":1760379628944,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Тест проверяет, что если нет почты в базе, она предложит пройти регистрацию","status":"failed","statusMessage":"AssertionError: Не удалось загрузить страницу: Page.goto: Timeout 30000ms exceeded.\n  Call log:\n    - navigating to \"https://qa.astanahub.com/ru/s/auth/login/\", waiting until \"load\"\n  \nassert False","statusTrace":"self = <test_login.TestAuth object at 0x7fa0ab365a70>\npage = <Page url='about:blank'>\nauth_page = <pages.auth_page.AuthPage object at 0x7fa0a9f7b9d0>\nemail = 'wrong@example974.com', password = 'wrongpass', expected_status = 200\n\n    @allure.title(\"Проверка авторизации с несуществующей почтой\")\n    @allure.description(\"Тест проверяет, что если нет почты в базе, она предложит пройти регистрацию\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @pytest.mark.parametrize(\n        \"email, password, expected_status\",\n        [\n            (\"123alisher123@alisher.alisher\", \"Adfsaf4213!\", 200),\n            (f\"wrong@example{random.randint(1, 1000)}.com\", \"wrongpass\", 200),\n    \n        ],\n        ids=[\"✅ Невалидный логин\", \"✅ Невалидный логин 2\"]\n    )\n    def test_invite_for_reg(self, page, auth_page, email, password, expected_status):\n        with allure.step(\"Переход на страницу авторизации\"):\n            try:\n>               response = page.goto(Links.LOGIN_PAGE)\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntests/test_login.py:68: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/playwright/sync_api/_generated.py:9019: in goto\n    self._sync(\n/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/playwright/_impl/_page.py:556: in goto\n    return await self._main_frame.goto(**locals_to_params(locals()))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/playwright/_impl/_frame.py:153: in goto\n    await self._channel.send(\n/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/playwright/_impl/_connection.py:69: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <playwright._impl._connection.Connection object at 0x7fa0a9f79590>\ncb = <function Channel.send.<locals>.<lambda> at 0x7fa0a9ee0c20>\nis_internal = False, title = None\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(\n            task, \"__pw_stack__\", None\n        ) or inspect.stack(0)\n    \n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.TimeoutError: Page.goto: Timeout 30000ms exceeded.\nE           Call log:\nE             - navigating to \"https://qa.astanahub.com/ru/s/auth/login/\", waiting until \"load\"\n\n/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/playwright/_impl/_connection.py:558: TimeoutError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_login.TestAuth object at 0x7fa0ab365a70>\npage = <Page url='about:blank'>\nauth_page = <pages.auth_page.AuthPage object at 0x7fa0a9f7b9d0>\nemail = 'wrong@example974.com', password = 'wrongpass', expected_status = 200\n\n    @allure.title(\"Проверка авторизации с несуществующей почтой\")\n    @allure.description(\"Тест проверяет, что если нет почты в базе, она предложит пройти регистрацию\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @pytest.mark.parametrize(\n        \"email, password, expected_status\",\n        [\n            (\"123alisher123@alisher.alisher\", \"Adfsaf4213!\", 200),\n            (f\"wrong@example{random.randint(1, 1000)}.com\", \"wrongpass\", 200),\n    \n        ],\n        ids=[\"✅ Невалидный логин\", \"✅ Невалидный логин 2\"]\n    )\n    def test_invite_for_reg(self, page, auth_page, email, password, expected_status):\n        with allure.step(\"Переход на страницу авторизации\"):\n            try:\n                response = page.goto(Links.LOGIN_PAGE)\n                assert response.status == 200, f\"Ошибка, url не действительный: {response.status}\"\n            except PlaywrightTimeoutError as e:\n>               assert False, f\"Не удалось загрузить страницу: {e}\"\nE               AssertionError: Не удалось загрузить страницу: Page.goto: Timeout 30000ms exceeded.\nE                 Call log:\nE                   - navigating to \"https://qa.astanahub.com/ru/s/auth/login/\", waiting until \"load\"\nE                 \nE               assert False\n\ntests/test_login.py:71: AssertionError","steps":[{"name":"Переход на страницу авторизации","time":{"start":1760379628945,"stop":1760379658947,"duration":30002},"status":"failed","statusMessage":"AssertionError: Не удалось загрузить страницу: Page.goto: Timeout 30000ms exceeded.\n  Call log:\n    - navigating to \"https://qa.astanahub.com/ru/s/auth/login/\", waiting until \"load\"\n  \nassert False\n","statusTrace":"  File \"/home/runner/work/hub/hub/tests/test_login.py\", line 71, in test_invite_for_reg\n    assert False, f\"Не удалось загрузить страницу: {e}\"\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"page::0","time":{"start":1760379659082,"stop":1760379659119,"duration":37},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"subSuite","value":"Smoke тесты"},{"name":"suite","value":"Astanahub - Авторизация"},{"name":"severity","value":"critical"},{"name":"parentSuite","value":"tests"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"4944-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"email","value":"'wrong@example974.com'"},{"name":"expected_status","value":"200"},{"name":"password","value":"'wrongpass'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"385cca64fd16e88c.json","parameterValues":["'wrong@example974.com'","200","'wrongpass'"]}